{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minElement = document.querySelector('[data-minutes]');\nconst secElement = document.querySelector('[data-seconds]');\nconst button = document.querySelector('[data-start]');\n\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    if (userSelectedDate <= Date.now()) {\n      button.disabled = true;\n      iziToast.error({ message: 'Please choose a date in the future' });\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nlet userSelectedDate;\nlet intervalId;\n\nflatpickr(input, options);\n\n// Виклик таймера\n\nbutton.addEventListener('click', startTimer);\n\nfunction startTimer() {\n  input.disabled = true;\n  button.disabled = true;\n\n  timerUpdater();\n  intervalId = setInterval(timerUpdater, 1000);\n}\n\nfunction timerUpdater() {\n  const currentTime = Date.now();\n  const time = userSelectedDate - currentTime;\n\n  if (time <= 0) {\n    clearInterval(intervalId);\n    daysElement.textContent = '00';\n    hoursElement.textContent = '00';\n    minElement.textContent = '00';\n    secElement.textContent = '00';\n    button.disabled = false;\n    input.disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(time);\n  daysElement.textContent = pad(days);\n  hoursElement.textContent = pad(hours);\n  minElement.textContent = pad(minutes);\n  secElement.textContent = pad(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["input","daysElement","hoursElement","minElement","secElement","button","options","selectedDates","userSelectedDate","iziToast","intervalId","flatpickr","startTimer","timerUpdater","currentTime","time","days","hours","minutes","seconds","convertMs","pad","ms","value"],"mappings":"+IAQA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAS,SAAS,cAAc,cAAc,EAEpDA,EAAO,SAAW,GAElB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAAE,QAAO,EACvCC,GAAoB,KAAK,OAC3BH,EAAO,SAAW,GAClBI,EAAS,MAAM,CAAE,QAAS,oCAAsC,CAAA,GAEhEJ,EAAO,SAAW,EAErB,CACH,EAEA,IAAIG,EACAE,EAEJC,EAAUX,EAAOM,CAAO,EAIxBD,EAAO,iBAAiB,QAASO,CAAU,EAE3C,SAASA,GAAa,CACpBZ,EAAM,SAAW,GACjBK,EAAO,SAAW,GAElBQ,IACAH,EAAa,YAAYG,EAAc,GAAI,CAC7C,CAEA,SAASA,GAAe,CACtB,MAAMC,EAAc,KAAK,MACnBC,EAAOP,EAAmBM,EAEhC,GAAIC,GAAQ,EAAG,CACb,cAAcL,CAAU,EACxBT,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAW,YAAc,KACzBC,EAAW,YAAc,KACzBC,EAAO,SAAW,GAClBL,EAAM,SAAW,GACjB,MACD,CAED,KAAM,CAAE,KAAAgB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EACxDd,EAAY,YAAcoB,EAAIL,CAAI,EAClCd,EAAa,YAAcmB,EAAIJ,CAAK,EACpCd,EAAW,YAAckB,EAAIH,CAAO,EACpCd,EAAW,YAAciB,EAAIF,CAAO,CACtC,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAIE,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}